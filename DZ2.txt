JSON
 1. Создать внешний репозиторий c названием JSON.
- Войти в GitHab под своей учётной записью
- Нажать Repositories New
- Вписать название JSON выбрать public and Add a README file
- Нажать create respository
 2. Клонировать репозиторий JSON на локальный компьютер.
- Нажать Code, 
- Скопировать HTTPS, 
- Открыть GitBash 
- Пройти в нужную директорию cd /c/DZ_Aleksei_Z/DZ2_GitHab/ 
- git clone "https://github.com/Alekseston/JSON.git"
 3. Внутри локального JSON создать файл “new.json”.
- cd JSON
- cat > new.json
- Нажать Сtrl+C
 4. Добавить файл под гит.
- git add new.json
 5. Закоммитить файл.
- git commit -m "New File"
 6. Отправить файл на внешний GitHub репозиторий.
- git push
 7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
- cat >> new.json
- Нажать Enter
- Ввести
{
"ФИО":"Иванов Иван Иванович",
"возраст":"99",
"количество домашних животных":"1",
"будущая желаемая зарплата":"100000000"
}
- Нажать Enter
- Нажать Ctrl+C 
 8. Отправить изменения на внешний репозиторий.
- git add new.json;git commit -m "add Data";git push
 9. Создать файл preferences.json
- cat > preferences.json
 10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате JSON.
- Нажать enter
- Ввести
{
"Любимый фильм":"Однажды в Ирландии",
"Любимый сериал":"Настоящий детектив",
"Любимая еда":"Жареная картошка с грибами",
"Любимое время года":"Лето",
"Страна которую хотели бы посетить":"Япония"
}
- Нажать Enter
- Нажать Ctrl+C
 11. Создать файл skills.json, добавить информацию о скилах которые будут изучены на курсе в формате JSON
- cat > skills.json 
- Нажать enter
- Ввести
{"skills":["GitBash",
"GitHab",
"SQL",
"JSON",
"XML",
"API",
"HTTP",
"DevTools",
"Linux terminal",
"Python",
"Scrum"]
}
- Нажать Enter
- Нажать Сtrl+C
 12. Отправить сразу 2 файла на внешний репозиторий.
- git add .;git commit -m "txt3";git push 
 13. На веб интерфейсе создать файл bug_report.json.
- Войти в GitHab под своей учётной записью
- Выбрать респозиторий Alekseston/JSON
- Нажать Add file
- Нажать Create new file
- Написать имя файла bug_report.json
 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- Оставить автоматически внесенное описание 
- Оставить radiobutton в положении Commit directly to the main branch
- Нажать Commit new file
 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
- Выбрать созданный файл
- Нажать на символ карандаш (edit this file) для редактирования
- Ввести 
{
"Title":"Design problem in the footer on all pages with a dark theme, always",
"Environment":["Device":"Laptop Lenovo 13s-IWL",
"OS":"Windows 10 Pro x64",
"Connection type":"WiFi",
"Browser":"Chrome 97.0.4692.71 64bit",
"Reproducibility Rate":"3"],
"Steps to Reproduce":["1":"Open https://enholding.ru/","2":"Scroll to show footer"],
"Expected Result":"Background design with smooth transitions",
"Actual Result":"Around the light switch there is a sharp transition to the rest of the 
background and the line separating the basement changes its thickness abruptly",
"Proof":"https://github.com/Alekseston/JSON/blob/dce654e94ac0f9acf22fe9e4474e099480290a4d/screenshot-enholding.ru-2022.01.13-10_36_38.png",
"Severity/Priority":"Medium"
}
 16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- Оставить автоматически внесенное описание 
- Оставить radiobutton в положении Commit directly to the main branch
- Нажать Commit new file
 17. Синхронизировать внешний и локальный репозиторий JSON
- git pull

XML
 1. Создать внешний репозиторий c названием XML.
- Войти в GitHab под своей учётной записью 
- Нажать Repositories New
- Вписать название XML выбрать public and Add a README file
- Нажать create respository.
 2. Клонировать репозиторий XML на локальный компьютер.
- Нажать Code 
- Скопировать HTTPS
- Открыть GitBash 
- Пройти в нужную директорию cd /c/DZ_Aleksei_Z/DZ2_GitHab/ 
- git clone "https://github.com/Alekseston/XML.git"
 3. Внутри локального XML создать файл “new.xml”.
- cd XML
- cat > new.xml
- нажать ctrl+C
 4. Добавить файл под гит.
- git add new.xml
 5. Закоммитить файл.
- git commit -m "new"
 6. Отправить файл на внешний GitHub репозиторий.
- git push
 7. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
- cat >> new.xml 
- Нажать enter
- Ввести
<?xml version="1.0"?>
<Me>
  <ФИО>Знатков А.А.</ФИО>
  <Возраст>38</Возраст>
  <Количество домашних животных>1</Количество домашних животных>
  <Будущая желаемая зарплата>1000</Будущая желаемая зарплата>
</Me>
- Нажать Enter
- Нажать Ctrl+C
 8. Отправить изменения на внешний репозиторий.
- git add new.xml && git commit -m "FIOxml"&& git push 
 9. Создать файл preferences.xml
- cat > preferences.xml
 10. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
- Нажать enter
- Ввести
<?xml version="1.0"?>
<Предпочения>
<Любимый фильм>Однажды в Ирландии</Любимый фильм>,
<Любимый сериал>Настоящий детектив</Любимый сериал>,
<Любимая еда>Жареная картошка с грибами</Любимая еда>,
<Любимое время года>Лето</Любимое время года>,
<Страна которую хотели бы посетить>Япония</Страна которую хотели бы посетить>
</Предпочтения>
- Нажать Enter
- Нажать Ctrl+C
 11. Создать файл skills.xml добавить информацию о скилах которые будут изучены на курсе в формате XML
- cat > skills.xml
- Нажать enter
- Ввести
<?xml version="1.0"?>
<Скилы><1>GitBash</1>,
<2>GitHab</2>,
<3>SQL</3>,
<4>JSON<4>,
<5>XML<5>,
<6>API<6>,
<7>HTTP<7>,
<8>DevTools<8>,
<9>Linux terminal<9>,
<10>Python<10>,
<11>Scrum<11>
</Скилы>
- Нажать Enter
- Нажать Ctrl+C
 12. Сделать коммит в одну строку.
- git add . && git commit -m "Предпочтения и скилы"
 13. Отправить сразу 2 файла на внешний репозиторий.
- git push
 14. На веб интерфейсе создать файл bug_report.xml.
- Войти в GitHab под своей учётной записью
- Выбрать респозиторий Alekseston/XML
- Нажать Add file
- Нажать Create new file
- Написать имя файла bug_report.xml
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- Оставить автоматически внесенное описание 
- Оставить radiobutton в положении Commit directly to the main branch
- Нажать Commit new file
 16. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
- Выбрать созданный файл
- Нажать на символ карандаш (edit this file) для редактирования
- Ввести 
<?xml version="1.0"?>
<Title>Design problem in the footer on all pages with a dark theme, always</Title>,
<Environment>
<Device>Laptop Lenovo 13s-IWL</Device>,
<OS>Windows 10 Pro x64</OS>,
<Connection type>WiFi</Connection type>,
<Browser>Chrome 97.0.4692.71 64bit</Browser>,
<Reproducibility Rate>3</Reproducibility Rate>
</Environment>,
<Steps to Reproduce><1>Open https://enholding.ru/</1>,
<2>Scroll to show footer</2>
</Steps to Reproduce>,
<Expected Result>Background design with smooth transitions</Expected Result>,
<Actual Result>Around the light switch there is a sharp transition to the rest of the background 
and the line separating the basement changes its thickness abruptly"</Actual Result>,
<Proof>https://github.com/Alekseston/JSON/blob/dce654e94ac0f9acf22fe9e4474e099480290a4d/
screenshot-enholding.ru-2022.01.13-10_36_38.png</Proof>,
<Severity/Priority>Medium</Severity/Priority>
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- Оставить автоматически внесенное описание 
- Оставить radiobutton в положении Commit directly to the main branch
- Нажать Commit new file
 18. Синхронизировать внешний и локальный репозиторий XML
- git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
- Войти в GitHab под своей учётной записью
- Нажать Repositories New
- Вписать название TXT выбрать public and Add a README file
- Нажать create respository
 2. Клонировать репозиторий TXT на локальный компьютер.
- Нажать Code 
- Скопировать HTTPS
- Открыть GitBash 
- Пройти в нужную директорию cd /c/DZ_Aleksei_Z/DZ2_GitHab/ 
- git clone "https://github.com/Alekseston/TXT.git"
 3. Внутри локального TXT создать файл “new.txt”.
- cd TXT
- cat > new.txt
- Нажать Сtrl+C
 4. Добавить файл под гит.
- git add new.txt
 5. Закоммитить файл.
- git commit -m "New File"
 6. Отправить файл на внешний GitHub репозиторий.
- git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
- cat >> new.txt
- Нажать Enter
- Ввести
{
"ФИО":"Знатков A. A.",
"возраст":"38",
"количество домашних животных":"1",
"будущая желаемая зарплата":"1000"
}
- Нажать Enter
- Нажать Ctrl+C 
 8. Отправить изменения на внешний репозиторий.
- git add new.txt;git commit -m "add Data";git push
 9. Создать файл preferences.txt
- cat > preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате TXT.
- Нажать enter
- Ввести
{
"Любимый фильм":"Однажды в Ирландии",
"Любимый сериал":"Настоящий детектив",
"Любимая еда":"Жареная картошка с грибами",
"Любимое время года":"Лето",
"Страна которую хотели бы посетить":"Япония"
}
- Нажать Enter
- Нажать Ctrl+C
 11. Создать файл skills.txt добавить информацию о скилах которые будут изучены на курсе в формате TXT
- cat > skills.txt
- Нажать enter
- Ввести
{"skills":["GitBash",
"GitHab",
"SQL",
"JSON",
"XML",
"API",
"HTTP",
"DevTools",
"Linux terminal",
"Python",
"Scrum"]
}
- Нажать Enter
- Нажать Сtrl+C
 12. Сделать коммит в одну строку.
- git add . && git commit -m "Предпочтения и скилы"
 13. Отправить сразу 2 файла на внешний репозиторий.
- git push
 14. На веб интерфейсе создать файл bug_report.txt.
- Войти в GitHab под своей учётной записью
- Выбрать респозиторий Alekseston/TXT
- Нажать Add file
- Нажать Create new file
- Написать имя файла bug_report.txt
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- Оставить автоматически внесенное описание 
- Оставить radiobutton в положении Commit directly to the main branch
- Нажать Commit new file
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
- Выбрать созданный файл
- Нажать на символ карандаш (edit this file) для редактирования
- Ввести 
{
"Title":"Design problem in the footer on all pages with a dark theme, always",
"Environment":["Device":"Laptop Lenovo 13s-IWL",
"OS":"Windows 10 Pro x64",
"Connection type":"WiFi",
"Browser":"Chrome 97.0.4692.71 64bit",
"Reproducibility Rate":"3"],
"Steps to Reproduce":["1":"Open https://enholding.ru/","2":"Scroll to show footer"],
"Expected Result":"Background design with smooth transitions",
"Actual Result":"Around the light switch there is a sharp transition to the rest of the 
background and the line separating the basement changes its thickness abruptly",
"Proof":"https://github.com/Alekseston/JSON/blob/dce654e94ac0f9acf22fe9e4474e099480290a4d/screenshot-enholding.ru-2022.01.13-10_36_38.png",
"Severity/Priority":"Medium"
}
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- Оставить автоматически внесенное описание 
- Оставить radiobutton в положении Commit directly to the main branch
- Нажать Commit new file
 18. Синхронизировать внешний и локальный репозиторий TXT
- git pull